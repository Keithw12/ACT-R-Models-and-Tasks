# -*- coding: utf-8 -*-
"""
Created on Mon Nov  4 23:20:14 2019

@author: Keith
"""

import actr

actr.load_act_r_model("ACT-R:tutorial;unit2;unit2-assignment-model.lisp")


class TaskVars:
    """Container for attributes"""
    response = []    #letter given
    result = []      #good or bad (T/F)
    isHuman = False
    text1, text2, text3 = False
    window = False
    
    def generate_three_letters():
        items = actr.permute_list(["B","C","D","F","G","H","J","K","L",
                                   "M","N","P","Q","R","S","T","V","W",
                                   "X","Y","Z"])
        target = items[0]
        foil = items[1]
        window = actr.open_exp_window("Leter difference task")
        text1 = foil
        text2 = foil
        text3 = foil
        index = actr.random(3)
        
        #assign a letter unique to the other two, based on a random value generated by actr
        if index == 0:
            text1 = target
        elif index == 1:
            text2 = target
        else:
            text3 = target
        
def respond_to_key_press(model,key):
    if TaskVars.isHuman == True:
        actr.delete_event()
    TaskVars.response[-1] = key
    
def experiment(human=False):
    TaskVars.isHuman = human
	
    actr.reset()
    
    actr.add_command("unit2-key-press",respond_to_key_press,
                         "Assignment 2 task output-key monitor")
    actr.monitor_command("output-key","unit2-key-press")
    
    TaskVars.generate_three_letters()
    
    
    #We run this single task 10 times to get 10 responses.
    #while len(TaskVars.response) < 10:
    
        
    #display 3 letters to the screen
    actr.add_text_to_exp_window(TaskVars.window, TaskVars.text1, x=125, y=75)
    actr.add_text_to_exp_window(TaskVars.window, TaskVars.text2, x=75, y=175)
    actr.add_text_to_exp_window(TaskVars.window, TaskVars.text3, x=175, y=175)
    
    TaskVars.response.append('')
    
    if human == True:
        while TaskVars.response[-1] == '':
            actr.process_events()
    else:
        actr.install_device(TaskVars.window)
        actr.run(10,True)
        
    if TaskVars.response[-1].lower() == target.lower():
        TaskVars.result.append(True)
    else:
        TaskVars.result.append(False)
            
    actr.remove_command_monitor("output-key","unit2-key-press")
    actr.remove_command("unit2-key-press")
    
    return TaskVars.result